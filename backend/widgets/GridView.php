<?php

namespace backend\widgets;

use Yii;
use yii\helpers\Html;

class GridView extends \kartik\grid\GridView
{
    public $title;
    public $subAction = '';

    public static function widget($config = [])
    {
        $config = array_merge([
            'containerOptions' => ['style' => 'overflow: auto'], // only set when $responsive = false
            'headerRowOptions' => ['class' => 'kartik-sheet-style'],
            'filterRowOptions' => ['class' => 'kartik-sheet-style'],
            'pjax' => true,
            'toolbar' => [
                [
                    'content' =>
                        Html::a('<i class="fa fa-plus"></i>', ['create'], [
                            'class' => 'btn btn-success',
                            'title' => Yii::t('app', 'Добавить'),
                        ]) . ' ' .
                        Html::a('<i class="fa fa-refresh"></i>', [''], [
                            'class' => 'btn btn-outline-secondary',
                            'title' => Yii::t('app', 'Сбросить'),
                            'data-pjax' => 0,
                        ]) . ' ' .
                        Html::a('<i class="fa fa fa-trash-o"></i>', ['multi-delete'], [
                            'class' => 'btn btn-danger',
                            'title' => Yii::t('app', 'Удалить'),
                            'onclick' => 'setParams($(this))',
                            'data' => [
                                'confirm' => 'Вы действительно хотите удалить вабранные объекты?',
                                'method' => 'post',
                            ],
                        ]),
                    'options' => ['class' => 'btn-group mr-2']
                ],
                '{toggleData}',
//                '{export}',
            ],
            'toggleDataContainer' => ['class' => 'btn-group mr-2'],
            // set export properties
            'export' => [
                'fontAwesome' => true
            ],
            // parameters from the demo form
            'bordered' => true,
//            'striped' => true,
//            'condensed' => true,
            'responsive' => false,
//            'hover' => true,
//            'showPageSummary' => false,
            'panel' => [
                'type' => GridView::TYPE_PRIMARY,
                'heading' => "",
                'after' => false
            ],
            'persistResize' => false,
            'toggleDataOptions' => ['minCount' => 10],
            'exportConfig' => false,
//            'itemLabelSingle' => 'book',
//            'itemLabelPlural' => 'books'
        ], $config);
        return parent::widget($config); // TODO: Change the autogenerated stub
    }

    public function run()
    {
        $this->panel['heading'] = $this->title ? $this->title : $this->view->title;
        parent::run(); // TODO: Change the autogenerated stub
        $this->view->registerJs($this->deleteScript(), \yii\web\View::POS_BEGIN);
    }

    private function deleteScript() {
        $script = <<<JS
        function setParams(e){
            var keyList = e.parents('.grid-view').yiiGridView('getSelectedRows');
            if(keyList != '') {
                e.attr('data-params', JSON.stringify({keyList}));
            } else {
                e.removeAttr('data-params');
            }
        };
JS;
        return $script;
    }
}